name: mongo-sharding-repl
services:
  configSrv1:
    image: mongo:latest
    container_name: configSrv1
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.18.0.10
    volumes:
      - config-data-1:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv2:
    image: mongo:latest
    container_name: configSrv2
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.18.0.11
    volumes:
      - config-data-2:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv3:
    image: mongo:latest
    container_name: configSrv3
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.18.0.12
    volumes:
      - config-data-3:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router1:
    image: mongo:latest
    container_name: mongos_router1
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.18.0.13
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv1:27017, configSrv2:27018, configSrv3:27019",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.18.0.16
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.18.0.17
    volumes:
      - shard1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1-3:
    image: mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "27025:27025"
    networks:
      app-network:
        ipv4_address: 173.18.0.18
    volumes:
      - shard1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27026:27026"
    networks:
      app-network:
        ipv4_address: 173.18.0.19
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27026"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-2:
    image: mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "27027:27027"
    networks:
      app-network:
        ipv4_address: 173.18.0.20
    volumes:
      - shard2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27027"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2-3:
    image: mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "27028:27028"
    networks:
      app-network:
        ipv4_address: 173.18.0.21
    volumes:
      - shard2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27028"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

volumes:
  config-data-1:
  config-data-2:
  config-data-3:
  shard1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-data:
  shard2-2-data:
  shard2-3-data:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16